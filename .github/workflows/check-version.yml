name: Check Version to allow merge of main to release

on:
  pull_request:
    types:
      - opened
      - reopened
    branches:
      - release

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get current version from release branch
        id: get-release-version
        run: |
          git fetch origin release:release
          RELEASE_VERSION=$(grep '^version =' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "RELEASE_VERSION"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Get version from main branch
        id: get-main-version
        run: |
          git fetch origin main:main
          MAIN_VERSION=$(grep '^version =' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: compare-versions
        run: |
          if [ "$MAIN_VERSION" == "$RELEASE_VERSION" ] || [ "$(printf '%s\n' "$MAIN_VERSION" "$RELEASE_VERSION" | sort -V | head -n1)" = "$MAIN_VERSION" ]; then
            echo "Main branch version ($MAIN_VERSION) is not higher than release branch version ($RELEASE_VERSION). Pull request is not allowed"
            echo "PR_ALLOWED=0" >> $GITHUB_OUTPUT
          else
            echo "Main branch version ($MAIN_VERSION) is higher than release branch version ($RELEASE_VERSION). Pull request is allowed"
            echo "PR_ALLOWED=1" >> $GITHUB_OUTPUT
          fi
          
      - name: Set status check
        if: ${{ steps.compare-versions.outputs.PR_ALLOWED == '0' }}
        run: exit 1