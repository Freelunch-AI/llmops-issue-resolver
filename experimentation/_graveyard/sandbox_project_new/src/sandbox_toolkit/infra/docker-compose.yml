
services:
  sandbox-orchestrator:
    build:
      context: ../../
      dockerfile: Dockerfile
    container_name: sandbox-orchestrator
    networks:
      - sandbox-network
    depends_on:
      - qdrant
      - neo4j
      - sandbox-base
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=sandbox_secret
      - SANDBOX_BASE_URL=http://sandbox-base:8080
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G

  sandbox-base:
    build:
      context: ../../
      dockerfile: Dockerfile.sandbox
    container_name: sandbox-base
    networks:
      - sandbox-network
    volumes:
      - sandbox_data:/var/lib/sandbox
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/tools:/opt/sandbox/tools:ro
    environment:
      - MAX_CONCURRENT_EXECUTIONS=5
      - EXECUTION_TIMEOUT=3600
      - SANDBOX_LOG_LEVEL=INFO
      - RESOURCE_CPU_LIMIT=1.0
      - RESOURCE_MEMORY_LIMIT=1G
      - NETWORK_POLICY=restricted
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # GRPC
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - sandbox-network

  neo4j:
    image: neo4j:5.9
    container_name: neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/sandbox_secret
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - sandbox-network

networks:
  sandbox-network:
    name: sandbox-network
volumes:
  qdrant_data:
  neo4j_data:
  neo4j_logs:
  sandbox_data: