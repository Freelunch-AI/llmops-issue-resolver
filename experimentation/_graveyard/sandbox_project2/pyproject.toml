[project]
name = "sandbox-toolkit"
version = "0.1.0"
description = "Toolkit for creating, managing, and interacting with sandboxed environments for executing actions"
authors = [
    {name = "Bruno Scaglione", email = "bruno.c.scaglione@gmail.com"}
]
dependencies = [
    "fastapi>=0.104.0",
    "httpx>=0.25.0",
    "pydantic>=2.5.0",
    "docker>=7.0.0",
    "PyYAML>=6.0.1",
    "neo4j>=5.14.0",
    "qdrant-client>=1.6.0",
    "cryptography>=41.0.0",
    "sphinx>=7.1.0",  # Core documentation generator
    "sphinx-rtd-theme>=1.3.0",  # Read the Docs theme
    "myst-parser>=2.0.0",  # Markdown support for Sphinx
    "requests>=2.31.0",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib>=1.7.4",
    "bcrypt>=4.0.1"
]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "AGPL"}
keywords = ["sandbox", "sdk", "agents"]

[project.optional-dependencies]
test = [
    "pytest",
    "coverage",
]
dev = [
    "ruff",
    "mypy",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple/"
publish-url = "https://upload.pypi.org/legacy/"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
default = true # treated as the lowest priority index 

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E501", "I"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "src/tests/unit_tests/functional_tests",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]
ignore_errors = true

[tool.mypy]
python_version = ">=3.12"
warn_return_any = true
warn_unused_configs = true