[project]
name = "sandbox-orchestrator"
version = "0.1.0"
description = "Orchestrator for managing sandbox containers"
authors = [
    {name = "OpenHands", email = "openhands@all-hands.dev"}
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "docker>=7.0.0",
    "pydantic>=2.5.0",
    "PyYAML>=6.0.1",
    "qdrant-client>=1.6.0",
    "neo4j>=5.14.0",
    "httpx>=0.25.0",
    "sentence-transformers>=2.2.2",
    "numpy>=1.24.0",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
]
dev = [
    "ruff>=0.1.6",
    "mypy>=1.7.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["sandbox_orchestrator"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["docker.*", "qdrant_client.*", "neo4j.*"]
ignore_missing_imports = true